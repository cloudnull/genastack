Genastack Openstack Installer
#############################
:date: 2014-03-07
:tags: rackspace, openstack, dev
:category: \*nix

Build Openstack in a Contained Application. This utility will Compile the necessary bits and install the rest in a stable way.


* This is presently a work in progress and does not currently install any openstack packages.

* This application will presently only install Python on a system with all of it required dependencies.

* This application DOES NOT WORK ON RHEL or RHEL based Systems... at least not yet.


Building roles is simple:
  1. Create a python module in the roles directory.

  2. in the ``__init__.py`` file add a constant named `BUILD_DATA`

  3. name your first key the name of the new role. This will get parsed as a run option.


Example:

.. code-block:: python

    BUILD_DATA = {
        'keystone': {
            'help': 'Install Keystone from upstream on Branch "%s"' % BRANCH,
            'required': [
                'python'
            ],
            'directories': [
                {
                    'path': '/var/log/keystone',
                    'user': 'keystone',
                    'group': 'keystone',
                    'mode': 0755
                },
                {
                    'path': '/var/lib/keystone',
                    'user': 'keystone',
                    'group': 'keystone',
                    'mode': 0755
                },
                {
                    'path': '/etc/keystone',
                    'user': 'keystone',
                    'group': 'keystone',
                    'mode': 0755
                },
                {
                    'path': '/etc/keystone/ssl',
                    'user': 'keystone',
                    'group': 'keystone',
                    'mode': 0755
                }
            ],
            'group_create': [
                {
                    'group': 'keystone',
                    'system': True
                }
            ],
            'user_create': [
                {
                    'user': 'keystone',
                    'group': 'keystone',
                    'home': '/var/lib/keystone',
                    'system': True
                }
            ],
            'file_create': [
                {
                    'path': '/etc/keystone',
                    'name': 'keystone.conf',
                    'from_remote': KEYSTONE_CONF,
                    'user': 'keystone',
                    'group': 'keystone',
                    'mode': 0644
                },
                {
                    'path': '/etc/keystone',
                    'name': 'keystone-paste.ini',
                    'from_remote': KEYSTONE_PASTE,
                    'user': 'keystone',
                    'group': 'keystone',
                    'mode': 0644
                },
                {
                    'path': '/etc/keystone',
                    'name': 'logging.conf.sample',
                    'from_remote': KEYSTONE_LOGGING,
                    'user': 'keystone',
                    'group': 'keystone',
                    'mode': 0644
                },
                {
                    'path': '/etc/keystone',
                    'name': 'policy.json',
                    'from_remote': KEYSTONE_POLICY_JSON,
                    'user': 'keystone',
                    'group': 'keystone',
                    'mode': 0644
                },
                {
                    'path': '/etc/keystone',
                    'name': 'policy.v3cloudsample.json',
                    'from_remote': KEYSTONE_POLICY_JSON_V3API,
                    'user': 'keystone',
                    'group': 'keystone',
                    'mode': 0644
                }
            ],
            'pip_install': [
                'git+%s@%s' % (KEYSTONE_PROJECT, BRANCH)
            ],
            'apt_packages': [
                'libsasl2-dev',
                'debhelper',
                'dh-apparmor',
                'docutils-common',
                'libjs-sphinxdoc',
                'libjs-underscore'
            ]
        }
    }



When you create the new role, the ``dict`` constant can execute within it python, so feel free to build out all the things.
Also you can use other modules / methods from within the role. It simply has to result in a completed `BUILD_DATA` constant.


All of the providers for roles
------------------------------

This is incomplete
^^^^^^^^^^^^^^^^^^


ldconfig:
  ldconfig  creates,  updates, and removes the necessary links and cache (for use by the run-time linker, ld.so). This resource can be used to create new links to trusted libraries.

  uses: this is a list of strings

  .. code-block:: json

    'ldconfig' : ['path/to/lib=/path/to/new/lib/configFile.conf' ]


  NOTICE:
    In order for this resource to work correctly you have to end the new config file with `.conf`.


pip_install:
  pip_install will use ``pip`` to install new python packages.  This resource will use the version of pip that was installed in the new `/opt/openstack` path.

  uses: this is a lit of strings

  .. code-block:: json

    'pip_install': ['python-novaclient']



init_script:
  init_script will create a basic init script for the application referenced.

  .. code-block:: json

    'init_script': [
        {
            'help': 'Start and stop keystone on boot',
            'init_path': '/etc/init.d',
            'bin_path': /opt/openstack/bin,
            'name': 'keystone',
            'chuid': 'keystone',
            'chdir': '/var/lib/keystone',
            'program': 'keystone-all'
        }
    ]


  NOTICE:
    This resource has two optional values. ``chuid`` and ``chdir`` do not need to be specified.




